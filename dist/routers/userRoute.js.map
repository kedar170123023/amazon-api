{"version":3,"sources":["../../src/routers/userRoute.js"],"names":["router","express","Router","post","req","res","User","findOne","email","body","password","signinUser","token","response","_id","name","isAdmin","send","console","log","status","msg","user","save","newUser","get","message"],"mappings":"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","sourcesContent":["import express from \"express\";\nconst router = express.Router();\nimport User from \"../models/userModel\";\nimport {getToken} from \"../util\";\n\n\n\n\n\n\nrouter.post(\"/signin\", async (req, res) => {\n\n\n  const signinUser = await User.findOne({\n    email: req.body.email,\n    password: req.body.password,\n  });\n  const token = getToken(signinUser);\n  if (signinUser) {\n    const response = {\n      _id: signinUser._id,\n      name: signinUser.name,\n      email: signinUser.email,\n      isAdmin: signinUser.isAdmin,\n      token: token,\n    }\n    res.send(response);\n  }\n  \n  else {\n    console.log(\"else\");\n    res.status(401).send({msg : \"Invalid Email or Password\"});\n  }\n});\n\nrouter.post(\"/register\", async (req, res) => {\n  console.log(\"register : \", req.body);\n\n  const user = new User({\n      name: req.body.name,\n      email: req.body.email,\n      password: req.body.password,\n  });\n  \n  try {\n\n    const newUser = await user.save(); \n  \n  \n\n  if(newUser){\n    res.send({\n      _id : newUser._id,\n      email : newUser.email,\n      isAdmin : newUser.isAdmin,\n      token : getToken(newUser)\n    })\n  }\n\n}\n\n  catch {\n    res.status(401).send({msg : 'Invalid User Data'});\n  }\n\n  }\n);\nrouter.get(\"/createadmin\", async (req, res) => {\n  console.log(\"trying to connect server\");\n  try {\n    const user = new User({\n      name: \"Kedar\",\n      email: \"kena421@gmail.com\",\n      password: 1234,\n      isAdmin: true,\n    });\n    const newUser = await user.save();\n    res.send(newUser);\n  } catch (err) {\n    res.send({ msg: err.message });\n  }\n});\n\nexport default router;\n"],"file":"userRoute.js"}