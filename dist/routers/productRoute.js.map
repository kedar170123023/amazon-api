{"version":3,"sources":["../../src/routers/productRoute.js"],"names":["router","express","Router","get","req","res","Product","find","products","send","console","log","params","id","productId","findById","_id","product","status","message","post","name","body","price","image","brand","category","countInStock","description","save","newProduct","data","put","updatedProduct","isAuth","isAdmin","deletedProduct","remove"],"mappings":"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","sourcesContent":["import express from \"express\";\nconst router = express.Router();\nimport Product from \"../models/productModel\";\nimport {isAdmin, isAuth} from '../util';\n\nrouter.get('/', async (req, res)=>{\n  \n  const products = await Product.find({});\n  res.send(products);\n});\n\n\nrouter.get('/:id', async (req, res)=>{\n  console.log(\"data req\",req.params.id );\n  const productId = req.params.id;  \n  const product = await Product.findById({_id : productId })\n  if(product){\n    res.send(product);\n  }\n  else {\n    res.status(404).send({message:\"product not found\"});\n  }\n});\n\nrouter.post('/', async (req, res)=>{\n\n  const product = new Product({\n    name          : req.body.name,\n    price         : req.body.price,\n    image         : req.body.image,\n    brand         : req.body.brand,\n    category      : req.body.category,\n    countInStock  : req.body.countInStock,\n    description   : req.body.description,\n  });\n  try {\n    const newProduct = await product.save();\n    if(newProduct){\n      return res.status(201).send({message : \"New Product Created\", data : newProduct});\n    }\n\n  }\n  catch (err){\n    return res.status(500).send({message : \"Error in creating product\"});\n  }\n});\n\nrouter.put('/:id', async (req, res)=>{\n  const productId = req.params.id;\n  const product = await Product.findById(productId);\n\n  if(product){\n    product.name          = req.body.name;\n    product.price         = req.body.price;\n    product.image         = req.body.image;\n    product.brand         = req.body.brand;\n    product.category      = req.body.category;\n    product.countInStock  = req.body.countInStock;\n    product.description   = req.body.description;    \n\n    try {\n      const updatedProduct = await product.save(); \n      return res.status(201).send({message: \"Product Updated\", data : updatedProduct});\n      \n    }\n    catch (err){\n      return res.status(500).send({message : \"error in updating product\"});\n    }\n    \n  }\n})\n\n\nrouter.delete('/:id',isAuth, isAdmin, async (req, res)=>{\n  const productId = req.params.id;\n  const deletedProduct = await Product.findById(productId);\n\n  if(deletedProduct){\n    await deletedProduct.remove();\n    res.send({message : \"product deleted\"});\n  }\n  else {\n    res.send(\"error in deleteing \")\n  }\n\n  }\n)\n\n\n\nexport default router;\n"],"file":"productRoute.js"}